import { Telegraf, Markup } from 'telegraf';
import fetch from 'node-fetch';
import dotenv from 'dotenv';

dotenv.config();

const bot = new Telegraf(process.env.BOT_TOKEN!);

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const mainMenu = Markup.keyboard([['üåê –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Å–∞–π—Ç—ã'], ['üìÅ –í—ã–±—Ä–∞—Ç—å —Å–∞–π—Ç']]).resize();

// –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å–∞–π—Ç–æ–≤
const sites = ['mdmprint.ru', 'copy.ru', '1-tm.ru', 'litera.studio', 'vea.ru', 'sequoiapay.io'];

// –ö–∞—Ä—Ç–∞: —Å–∞–π—Ç -> —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
const siteTests: Record<string, string[]> = {
    'mdmprint.ru': ['–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞', '–ì–ª–∞–≤–Ω–∞—è', '–ö–∞—Ç–∞–ª–æ–≥', '–ë—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑', '–ü–æ–∏—Å–∫'],
    'copy.ru': ['–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞', '–ì–ª–∞–≤–Ω–∞—è', '–ö–∞—Ç–∞–ª–æ–≥', '–ë—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑', '–ü–æ–∏—Å–∫'],
    '1-tm.ru': ['–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞', '–ì–ª–∞–≤–Ω–∞—è', '–ë—É—Ä–≥–µ—Ä-–º–µ–Ω—é', '–û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', '–ü–æ–∏—Å–∫'],
    'litera.studio': ['–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞', '–ì–ª–∞–≤–Ω–∞—è', '–ë—É—Ä–≥–µ—Ä-–º–µ–Ω—é', '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É', '–ü–æ–∏—Å–∫'],
    'vea.ru': ['–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞', '–ì–ª–∞–≤–Ω–∞—è', '–ú–µ–Ω—é —É—Å–ª—É–≥', '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É'],
    'sequoiapay.io': ['–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞', '–ì–ª–∞–≤–Ω–∞—è', '–°–º–µ–Ω–∞ —è–∑—ã–∫–∞'],
};

// –ö–∞—Ä—Ç–∞ –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —Å grep-—Å—Ç—Ä–æ–∫–æ–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω—É–∂–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
const grepMap: Record<string, string> = {
    'mdmprint.ru:–ì–ª–∞–≤–Ω–∞—è': 'mdmprint.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
    'mdmprint.ru:–ö–∞—Ç–∞–ª–æ–≥': 'mdmprint.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω—é –∫–∞—Ç–∞–ª–æ–≥–∞',
    'mdmprint.ru:–ë—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑': 'mdmprint.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ø-–∞–ø–∞ "–ë—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑"',
    'mdmprint.ru:–ü–æ–∏—Å–∫': 'mdmprint.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞',
    'mdmprint.ru:–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞': 'mdmprint.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞',

    'copy.ru:–ì–ª–∞–≤–Ω–∞—è': 'copy.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
    'copy.ru:–ö–∞—Ç–∞–ª–æ–≥': 'copy.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω—é –∫–∞—Ç–∞–ª–æ–≥–∞',
    'copy.ru:–ë—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑': 'copy.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ø-–∞–ø–∞ "–ë—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑"',
    'copy.ru:–ü–æ–∏—Å–∫': 'copy.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞',
    'copy.ru:–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞': 'copy.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞',

    '1-tm.ru:–ì–ª–∞–≤–Ω–∞—è': '1-tm.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
    '1-tm.ru:–ë—É—Ä–≥–µ—Ä-–º–µ–Ω—é': '1-tm.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—É—Ä–≥–µ—Ä-–º–µ–Ω—é',
    '1-tm.ru:–û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è': '1-tm.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ø-–∞–ø–∞ "–û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"',
    '1-tm.ru:–ü–æ–∏—Å–∫': '1-tm.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞',
    '1-tm.ru:–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞': '1-tm.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞',

    'litera.studio:–ì–ª–∞–≤–Ω–∞—è': 'litera.studio - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
    'litera.studio:–ë—É—Ä–≥–µ—Ä-–º–µ–Ω—é': 'litera.studio - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—É—Ä–≥–µ—Ä-–º–µ–Ω—é',
    'litera.studio:–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É': 'litera.studio - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ø-–∞–ø–∞ "–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É"',
    'litera.studio:–ü–æ–∏—Å–∫': 'litera.studio - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞',
    'litera.studio:–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞': 'litera.studio - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞',

    'vea.ru:–ì–ª–∞–≤–Ω–∞—è': 'vea.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
    'vea.ru:–ú–µ–Ω—é —É—Å–ª—É–≥': 'vea.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω—é —É—Å–ª—É–≥',
    'vea.ru:–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É': 'vea.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ø-–∞–ø–∞ "–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É"',
    'vea.ru:–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞': 'vea.ru - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞',

    'sequoiapay.io:–ì–ª–∞–≤–Ω–∞—è': 'sequoiapay.io - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
    'sequoiapay.io:–°–º–µ–Ω–∞ —è–∑—ã–∫–∞': 'sequoiapay.io - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞',
    'sequoiapay.io:–í—Å–µ —Ç–µ—Å—Ç—ã —Å–∞–π—Ç–∞': 'sequoiapay.io - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞',
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: —Ö—Ä–∞–Ω–∏—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–∞–π—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let userState: Record<number, { currentSite?: string }> = {};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.start((ctx) => {
    userState[ctx.from!.id] = {}; // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', mainMenu); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
});

// –ö–Ω–æ–ø–∫–∞ "–í—ã–±—Ä–∞—Ç—å —Å–∞–π—Ç" ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤
bot.hears('üìÅ –í—ã–±—Ä–∞—Ç—å —Å–∞–π—Ç', (ctx) => {
    userState[ctx.from!.id] = {}; // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    const siteButtons = sites.map((site) => [site]);
    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–π—Ç:', Markup.keyboard([...siteButtons, ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']]).resize());
});

// –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
bot.hears('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', (ctx) => {
    userState[ctx.from!.id] = {};
    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', mainMenu);
});

// –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Å–∞–π—Ç—ã" ‚Äî –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ GitHub Actions
bot.hears('üåê –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Å–∞–π—Ç—ã', async (ctx) => {
    ctx.reply('üöÄ –ó–∞–ø—É—Å–∫–∞—é –æ–±—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–æ–≤');
    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø—É—Å–∫ workflow –≤ GitHub Actions
        const res = await fetch(
            `https://api.github.com/repos/${process.env.GITHUB_REPO}/actions/workflows/${process.env.GITHUB_WORKFLOW}/dispatches`,
            {
                method: 'POST',
                headers: {
                    Authorization: `Bearer ${process.env.GITHUB_TOKEN}`,
                    Accept: 'application/vnd.github.v3+json',
                },
                body: JSON.stringify({
                    ref: process.env.GITHUB_REF,
                    inputs: {
                        grep: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–æ–≤',
                    },
                }),
            }
        );
        ctx.reply(res.ok ? '‚úÖ –¢–µ—Å—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã!' : `‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: ${await res.text()}`);
    } catch (err) {
        ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å: ' + (err as Error).message);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞–∂–∞—Ç–∏–π (–≤—ã–±–æ—Ä —Å–∞–π—Ç–∞ –∏ —Ç–µ—Å—Ç–∞)
bot.hears(/^(.+)$/, (ctx) => {
    const text = ctx.message.text.trim();
    const user = userState[ctx.from!.id];

    // –ï—Å–ª–∏ —Å–∞–π—Ç –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–Ω ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç —Å–∞–π—Ç
    if (!user.currentSite && sites.includes(text)) {
        user.currentSite = text;
        const tests = siteTests[text].map((t) => [t]);
        ctx.reply(`–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç –¥–ª—è ${text}:`, Markup.keyboard([...tests, ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']]).resize());
        return;
    }

    // –ï—Å–ª–∏ —Å–∞–π—Ç –≤—ã–±—Ä–∞–Ω ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–µ—Å—Ç
    if (user.currentSite) {
        const grepKey = `${user.currentSite}:${text}`;
        const grep = grepMap[grepKey];
        if (!grep) {
            ctx.reply('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–µ—Å—Ç.');
            return;
        }

        ctx.reply(`üöÄ –ó–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç: ${grep}`);
        // –ó–∞–ø—É—Å–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ GitHub Actions
        fetch(
            `https://api.github.com/repos/${process.env.GITHUB_REPO}/actions/workflows/${process.env.GITHUB_WORKFLOW}/dispatches`,
            {
                method: 'POST',
                headers: {
                    Authorization: `Bearer ${process.env.GITHUB_TOKEN}`,
                    Accept: 'application/vnd.github.v3+json',
                },
                body: JSON.stringify({
                    ref: process.env.GITHUB_REF,
                    inputs: {
                        grep,
                    },
                }),
            }
        )
            .then((res) =>
                res.ok
                    ? ctx.reply('‚úÖ –¢–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω!')
                    : res.text().then((err) => ctx.reply(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: ${err}`))
            )
            .catch((err) => ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å: ' + err.message));
    }
});

bot.launch();
