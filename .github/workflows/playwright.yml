name: Sites workability checking with Allure report on GitHub Pages

on:
    schedule:
        - cron: '0 6 * * *'
    workflow_dispatch:
    push:
        branches: ['main']

jobs:
    check_sites_workability:
        runs-on: ubuntu-latest
        container:
            image: mcr.microsoft.com/playwright:v1.51.1

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install Java and dependencies
              run: |
                  # Установка Java (необходима для Allure)
                  apt-get update && apt-get install -y openjdk-17-jre
                  # Проверка установки Java
                  java -version

                  # Установка Node.js зависимостей
                  npm install
                  npm install -D allure-playwright @playwright/test allure-commandline

            - name: Capture job start time
              id: start_time
              run: echo "job_started_at=$(TZ=Europe/Moscow date '+%d.%m.%Y %H:%M')" >> $GITHUB_ENV

            - name: Create Allure results directory
              run: mkdir -p allure-results

            - name: Run tests
              id: run_tests
              run: |
                  set +e
                  npx playwright test --grep 'Проверка работоспособности сайтов' --reporter=line,allure-playwright
                  EXIT_CODE=$?
                  echo "exit_code=$EXIT_CODE" >> $GITHUB_ENV

                  if [ $EXIT_CODE -eq 0 ]; then
                    echo "status=Успешно" >> $GITHUB_ENV
                    echo "emoji=✅" >> $GITHUB_ENV
                  else
                    echo "status=С ошибками" >> $GITHUB_ENV
                    echo "emoji=❌" >> $GITHUB_ENV
                  fi
                  exit 0

            - name: Generate Allure report
              if: always()
              run: |
                  # Явно указываем путь к allure
                  npx allure generate ./allure-results --clean -o ./allure-report
                  echo "ALLURE_REPORT_PATH=./allure-report" >> $GITHUB_ENV

            - name: Verify report generation
              if: always()
              run: |
                  if [ ! -d "./allure-report" ]; then
                    echo "::error::Allure report generation failed!"
                    ls -la # Для отладки: покажем содержимое директории
                    exit 1
                  fi

            - name: Prepare for GitHub Pages
              if: always()
              run: |
                  mkdir -p report
                  cp -r ./allure-report/* ./report/
                  touch ./report/.nojekyll
                  echo "REPORT_URL=https://${{ github.repository_owner }}.github.io/${GITHUB_REPOSITORY#*/}/" >> $GITHUB_ENV

            - name: Deploy to GitHub Pages
              if: always()
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./report
                  publish_branch: gh-pages
                  force_orphan: true

            - name: Prepare notification
              if: always()
              run: |
                  echo "email_body<<EOF" >> $GITHUB_ENV
                  echo "Результат проверки работоспособности сайтов: ${{ env.emoji }} ${{ env.status }}" >> $GITHUB_ENV
                  echo "Время запуска: ${{ env.job_started_at }}" >> $GITHUB_ENV
                  echo "Ссылка на отчёт: ${{ env.REPORT_URL }}" >> $GITHUB_ENV
                  echo "EOF" >> $GITHUB_ENV

            - name: Send email notification
              if: always()
              uses: dawidd6/action-send-mail@v3
              with:
                  server_address: smtp.yandex.ru
                  server_port: 587
                  username: ${{ secrets.EMAIL_USERNAME }}
                  password: ${{ secrets.EMAIL_PASSWORD }}
                  subject: 'Результат проверки работоспособности сайтов - ${{ env.emoji }} ${{ env.status }}'
                  body: ${{ env.email_body }}
                  to: ${{ secrets.EMAIL_RECIPIENTS }}
                  from: 'Автоматическое тестирование работоспособности сайтов'

            - name: Fail job if tests failed
              if: ${{ env.exit_code != 0 }}
              run: exit 1
