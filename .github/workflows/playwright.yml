name: Playwright Tests with Reliable Report

on:
    schedule:
        - cron: '0 6 * * *'
    workflow_dispatch:
    push:
        branches: ['**']

jobs:
    run_test:
        runs-on: ubuntu-latest
        container:
            image: mcr.microsoft.com/playwright:v1.51.1

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install dependencies
              run: npm install

            - name: Run tests with HTML report
              run: |
                  mkdir -p playwright-report
                  npx playwright test \
                    --grep 'Проверка рабоспособности сайтов' \
                    --reporter=html \
                    --output=playwright-report \
                    || echo "Tests completed with status $?"

            - name: Verify report exists
              run: |
                  if [ ! -f "playwright-report/index.html" ]; then
                    echo "::error::HTML report not found!"
                    ls -la playwright-report/
                    exit 1
                  fi
                  echo "Report files:"
                  ls -lh playwright-report/

            - name: Compress report using Node.js
              run: |
                  node -e "
                    const fs = require('fs');
                    const { execSync } = require('child_process');
                    
                    // Создаем архив без зависимостей от внешних утилит
                    if (fs.existsSync('playwright-report')) {
                      execSync('cd playwright-report && zip -qr ../report.zip .');
                      console.log('Archive created');
                    } else {
                      console.error('Report directory missing');
                      process.exit(1);
                    }
                  " || echo "Using alternative compression method"

            - name: Upload report via API (Node.js version)
              run: |
                  node -e "
                    const fs = require('fs');
                    const https = require('https');
                    
                    const reportFile = 'report.zip';
                    const repo = process.env.GITHUB_REPOSITORY;
                    const runId = process.env.GITHUB_RUN_ID;
                    const token = process.env.GITHUB_TOKEN;
                    
                    if (!fs.existsSync(reportFile)) {
                      console.error('Archive file not found');
                      process.exit(1);
                    }
                    
                    const data = fs.readFileSync(reportFile);
                    const options = {
                      hostname: 'uploads.github.com',
                      path: `/repos/${repo}/actions/runs/${runId}/artifacts?name=playwright-report`,
                      method: 'POST',
                      headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/zip',
                        'Content-Length': data.length
                      }
                    };
                    
                    const req = https.request(options, (res) => {
                      console.log(`Status: ${res.statusCode}`);
                      if (res.statusCode === 201) {
                        console.log('Upload successful');
                        process.exit(0);
                      } else {
                        res.on('data', (d) => console.error(d.toString()));
                        process.exit(1);
                      }
                    });
                    
                    req.on('error', (error) => {
                      console.error('Upload error:', error);
                      process.exit(1);
                    });
                    
                    req.write(data);
                    req.end();
                  "

            - name: Provide direct access instructions
              if: always()
              run: |
                  echo "=============================================="
                  echo "HOW TO ACCESS THE TEST REPORT:"
                  echo "1. Go to Actions tab in your repository"
                  echo "2. Find this workflow run (ID: $GITHUB_RUN_ID)"
                  echo "3. Download 'playwright-report' artifact"
                  echo ""
                  echo "ALTERNATIVE ACCESS:"
                  echo "Raw files available at:"
                  echo "https://github.com/$GITHUB_REPOSITORY/tree/$GITHUB_SHA/playwright-report"
                  echo "=============================================="
