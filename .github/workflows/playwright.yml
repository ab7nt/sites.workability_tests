name: Playwright Tests with Reliable Reporting

on:
    schedule:
        - cron: '0 6 * * *'
    workflow_dispatch:
    push:
        branches: ['**']

jobs:
    run_tests:
        runs-on: ubuntu-latest
        container:
            image: mcr.microsoft.com/playwright:v1.51.1

        steps:
            # 1. Подготовка (совместимая с вашим Runner)
            - name: Checkout code
              uses: actions/checkout@v3

            # 2. Явная установка Node.js и зависимостей
            - name: Setup Node.js
              run: |
                  apt-get update
                  apt-get install -y nodejs npm
                  npm install -g npm@latest
                  npm install

            # 3. Запуск тестов с принудительным указанием пути для отчёта
            - name: Run tests with forced report
              run: |
                  mkdir -p /test-results
                  npx playwright test \
                    --grep "Проверка работоспособности сайта 1tm.ru" \
                    --reporter=html \
                    --output=/test-results \
                    || true  # Продолжаем даже при ошибке тестов

            # 4. Проверка и упаковка отчёта
            - name: Verify and package report
              run: |
                  echo "Проверяем содержимое /test-results:"
                  ls -la /test-results || echo "Директория не существует"

                  if [ -d "/test-results/playwright-report" ]; then
                    echo "Отчёт найден, упаковываем..."
                    apt-get install -y zip
                    cd /test-results/playwright-report
                    zip -r /tmp/report.zip .
                  else
                    echo "::error::Отчёт не сгенерирован!"
                    exit 1
                  fi

            # 5. Копирование отчёта из контейнера на хост
            - name: Extract report from container
              run: |
                  docker cp $(docker ps -ql):/tmp/report.zip ./report.zip
                  ls -la ./report.zip || echo "Файл отчёта не найден"

            # 6. Альтернативная загрузка через API
            - name: Upload report via API
              run: |
                  if [ -f "./report.zip" ]; then
                    curl -X POST \
                      -H "Authorization: Bearer ${{ github.token }}" \
                      -H "Accept: application/vnd.github.v3+json" \
                      -H "Content-Type: application/zip" \
                      --data-binary @./report.zip \
                      "https://uploads.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts?name=playwright-report" \
                      --fail
                  else
                    echo "::error::Файл отчёта не найден для загрузки"
                    exit 1
                  fi

            # 7. Финал
            - name: Final message
              run: |
                  echo "Процесс завершён!"
                  echo "Ссылка на артефакты:"
                  echo "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
