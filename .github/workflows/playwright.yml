name: Playwright Tests (Legacy Runner Support)

on:
    schedule:
        - cron: '0 6 * * *'
    workflow_dispatch:
    push:
        branches: ['**']

jobs:
    run_tests:
        runs-on: ubuntu-latest
        container:
            image: mcr.microsoft.com/playwright:v1.51.1

        steps:
            # 1. Проверка кода (используем checkout@v3 для совместимости)
            - name: Checkout code
              uses: actions/checkout@v3

            # 2. Установка зависимостей
            - name: Install dependencies
              run: npm install

            # 3. Запуск теста с подробной диагностикой
            - name: Run test with diagnostics
              id: run_tests
              run: |
                  # Поиск теста в проекте
                  echo "Поиск теста в файлах:"
                  grep -rl "Проверка работоспособности сайта 1tm.ru" . || echo "Тест не найден"

                  # Запуск теста
                  npx playwright test \
                    --grep "Проверка работоспособности сайта 1tm.ru" \
                    --reporter=html,line \
                    --workers=1 \
                    --timeout=60000 \
                    --output=test-results || true

                  # Проверка существования отчета
                  if [ -d "test-results" ]; then
                    echo "::set-output name=report_exists::true"
                  else
                    echo "::error::Отчет не сгенерирован"
                    echo "::set-output name=report_exists::false"
                  fi

            # 4. Ручная загрузка отчета через API (без upload-artifact)
            - name: Upload report manually
              if: steps.run_tests.outputs.report_exists == 'true'
              run: |
                  # Установка curl если нужно
                  apt-get update && apt-get install -y curl || true

                  # Создаем архив
                  zip -r report.zip test-results/

                  # Загружаем через GitHub API
                  curl -X POST \
                    -H "Authorization: Bearer ${{ github.token }}" \
                    -H "Accept: application/vnd.github.v3+json" \
                    -H "Content-Type: application/zip" \
                    --data-binary @report.zip \
                    "https://uploads.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts?name=playwright-report" \
                    --fail

            # 5. Информация о результате
            - name: Show results
              run: |
                  echo "Тесты завершены со статусом: ${{ job.status }}"
                  echo "Ссылка на артефакты:"
                  echo "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
