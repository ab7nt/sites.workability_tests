name: Playwright Tests with Node.js Report Upload

on:
    schedule:
        - cron: '0 6 * * *'
    workflow_dispatch:
    push:
        branches: ['**']

jobs:
    run_test:
        runs-on: ubuntu-latest
        container:
            image: mcr.microsoft.com/playwright:v1.51.1

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Install dependencies
              run: npm install

            - name: Run tests with HTML report
              run: |
                  mkdir -p playwright-report
                  npx playwright test \
                    --grep 'Проверка рабоспособности сайтов' \
                    --reporter=html \
                    --output=playwright-report \
                    || echo "Tests completed with status $?"

            - name: Verify report exists
              run: |
                  if [ ! -f "playwright-report/index.html" ]; then
                    echo "::error::HTML report not found!"
                    ls -la playwright-report/
                    exit 1
                  fi
                  echo "Report files:"
                  ls -lh playwright-report/

            - name: Compress report using Node.js
              run: |
                  node <<EOF
                  const fs = require('fs');
                  const { execSync } = require('child_process');

                  try {
                    if (fs.existsSync('playwright-report')) {
                      execSync('cd playwright-report && zip -qr ../report.zip .');
                      console.log('Archive created successfully');
                    } else {
                      throw new Error('Report directory missing');
                    }
                  } catch (error) {
                    console.error('Compression failed:', error.message);
                    process.exit(1);
                  }
                  EOF

            - name: Upload report via Node.js
              run: |
                  node <<EOF
                  const fs = require('fs');
                  const https = require('https');

                  const reportFile = 'report.zip';
                  const repo = process.env.GITHUB_REPOSITORY;
                  const runId = process.env.GITHUB_RUN_ID;
                  const token = process.env.GITHUB_TOKEN;

                  if (!fs.existsSync(reportFile)) {
                    console.error('Error: Archive file not found');
                    process.exit(1);
                  }

                  const data = fs.readFileSync(reportFile);
                  const options = {
                    hostname: 'uploads.github.com',
                    path: \`/repos/\${repo}/actions/runs/\${runId}/artifacts?name=playwright-report\`,
                    method: 'POST',
                    headers: {
                      'Authorization': \`Bearer \${token}\`,
                      'Content-Type': 'application/zip',
                      'Content-Length': data.length,
                      'User-Agent': 'Node.js'
                    }
                  };

                  console.log('Uploading report...');
                  const req = https.request(options, (res) => {
                    let responseBody = '';
                    res.setEncoding('utf8');
                    res.on('data', (chunk) => responseBody += chunk);
                    
                    res.on('end', () => {
                      if (res.statusCode === 201) {
                        console.log('Upload successful!');
                        process.exit(0);
                      } else {
                        console.error(\`Upload failed with status \${res.statusCode}\`);
                        console.error('Response:', responseBody);
                        process.exit(1);
                      }
                    });
                  });

                  req.on('error', (error) => {
                    console.error('Upload error:', error);
                    process.exit(1);
                  });

                  req.write(data);
                  req.end();
                  EOF

            - name: Provide direct access
              if: always()
              run: |
                  echo "=============================================="
                  echo "REPORT ACCESS INSTRUCTIONS:"
                  echo "1. Go to Actions tab in GitHub repository"
                  echo "2. Locate this workflow run (ID: $GITHUB_RUN_ID)"
                  echo "3. Download 'playwright-report' artifact"
                  echo ""
                  echo "DIRECT LINK TO ARTIFACTS:"
                  echo "https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
                  echo "==============================================""
